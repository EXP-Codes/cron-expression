<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!--项目基本信息(必填)-->
    <groupId>exp.cron</groupId>
    <artifactId>cron-expression</artifactId>
    <version>1.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>cron表达式配置工具</name>
    <description>通过BS/CS界面配置合法的cron表达式</description>
    <url>https://github.com/lyy289065406/cron-expression</url>
    <inceptionYear>2018-10-30</inceptionYear>

    <!--项目的问题管理系统(可选)-->
    <issueManagement>
        <system>EXPLIBS-API-ONLINE</system>
        <url>https://lyy289065406.github.io/api-online/</url>
    </issueManagement>
    
    <!--项目的问题追踪系统(可选)-->
    <ciManagement>
        <system>jenkins</system>
        <url>http://127.0.0.1:8080/jenkins/</url>
    </ciManagement>
    
    <!-- 软件配置管理 -->
    <scm>
        <!-- 项目SVN主干目录（需保证目录已存在） -->
        <connection>scm:svn:https://github.com/lyy289065406/cron-expression/trunk</connection>
        <developerConnection>scm:svn:https://github.com/lyy289065406/cron-expression/trunk</developerConnection>
        <url>scm:svn:https://github.com/lyy289065406/cron-expression/trunk</url>
    </scm>

    <!-- 变量定义 -->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <release.dir>${project.build.directory}/${project.artifactId}-${project.version}</release.dir>
        <jdk.version>1.8</jdk.version>
        <explibs.version>1.2-SNAPSHOT</explibs.version>
        <mrp.plugin.version>1.1-SNAPSHOT</mrp.plugin.version>
    </properties>

    <!-- 项目依赖 -->
    <dependencies>
    
        <!-- 经验库 -->
    	<dependency>
		  <groupId>exp.libs</groupId>
		  <artifactId>exp-libs-simple</artifactId>
		  <version>${explibs.version}</version>
		</dependency>
		
		<!-- logback -->
		<dependency>
          <groupId>ch.qos.logback</groupId>
          <artifactId>logback-core</artifactId>
          <version>1.2.0</version>
          <scope>runtime</scope>
        </dependency>
        <dependency>
          <groupId>ch.qos.logback</groupId>
          <artifactId>logback-classic</artifactId>
          <version>1.0.13</version>
          <scope>runtime</scope>
        </dependency>
        <dependency>
          <groupId>ch.qos.logback</groupId>
          <artifactId>logback-access</artifactId>
          <version>1.0.13</version>
          <scope>runtime</scope>
        </dependency>
		
		<!-- 单元测试 -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.2</version>
			<scope>test</scope>
		</dependency>

    </dependencies>

    <!-- 项目构建 -->
    <build>
        <plugins>

            <!-- 指定项目JDK版本 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                </configuration>
            </plugin>
            
            <!-- 版本打包插件，在dos跳转到项目根目录，依次执行（需保证没有引用快照、本地与SVN服务器内容完全一致）: 
                1 发布基线到svn: mvn release:prepare 
                2 发布引用到私服 : mvn release:perform -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <!-- 项目的SVN基线目录（需保证目录已存在） -->
                    <tagBase>https://github.com/lyy289065406/cron-expression/tags</tagBase>
                </configuration>
            </plugin>

            <!-- 测试插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.7.2</version>
                <configuration>
                    <!-- 解决控制台输出乱码问题 -->
                    <forkMode>once</forkMode>
                    <argLine>-Dfile.encoding=UTF-8</argLine>
                    <systemProperties>
                        <property>
                            <name>net.sourceforge.cobertura.datafile</name>
                            <value>target/cobertura/cobertura.ser</value>
                        </property>
                    </systemProperties>
                    <!-- 项目打包时是否跳过d单元测试 -->
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>
            
            <!-- Ant插件：项目部署文件复制 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <id>ant-build</id>
                        <phase>install</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <echo>拷贝项目配置文件</echo>
                                <copy todir="${release.dir}/conf">
                                    <fileset dir="conf" />
                                </copy>
                                
                                <echo>拷贝web页面文件</echo>
                                <copy todir="${release.dir}/web/Cron">
                                    <fileset dir="web/Cron" />
                                </copy>
                                
                                <echo>拷贝界面启动文件</echo>
                                <copy file="./index.html" 
                                    tofile="${release.dir}/cron-ui-bs.html" />
                                <copy file="./doc/cron-ui-cs.exe" 
                                    tofile="${release.dir}/cron-ui-cs.exe" />
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <!-- 项目发布插件(自动生成脚本) -->
            <plugin>
                <groupId>exp.libs</groupId>
                <artifactId>mojo-release-plugin</artifactId>
                <version>${mrp.plugin.version}</version>
                <executions>
                    <execution>
                        <id>mrp</id>
                        <phase>install</phase>
                        <goals>
                            <goal>install</goal>
                        </goals>
                        <configuration>
                            <mavenRepository>D:\mavenRepository</mavenRepository>
                            <verClass>exp.cron.Version</verClass>
                            <mainClass>exp.cron.Main</mainClass>
                            <mainArgs></mainArgs>
                            <charset>UTF-8</charset>
                            <jdkPath>java</jdkPath>
                            <xms>32m</xms>
                            <xmx>64m</xmx>
                            <jdkParams></jdkParams>
                            <noVerJarRegex>exp-?libs-.*</noVerJarRegex> <!-- 不使用版本号的依赖构件(正则式) -->
                            <proguard>false</proguard>  <!-- 是否使用混淆包(需配置混淆打包插件) -->
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <!-- 打包源码: 项目发布基线版本时会自动打包源码，不要启用此插件，否则会失败 -->
            <!-- plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.1.2</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                            <goal>test-jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin -->

            <!-- 打包javadoc: 项目发布基线版本时会自动打包javadoc，若报错不要启用此插件 -->
            <!-- javadoc插件会强制使用GBK读取pom文件的内容, 若得到的html网页标题乱码,  -->
            <!-- 则需要通过Run Configurations -> 自定义Maven install命令 -> Common -> Encoding:GBK 确保不会乱码 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <aggregate>true</aggregate>
                    <charset>UTF-8</charset>
                    <encoding>UTF-8</encoding>
                    <docencoding>UTF-8</docencoding>
                    
                    <!-- 从JDK8开始, Javadoc中添加了doclint, 目的是旨在获得符合W3C HTML 4.01标准规范的HTML文档 -->
                    <!-- 简而言之Javadoc不允许出现html相关的元素, 若旧注释含有这些元素又不想修改, 只能关闭doclint -->
                    <additionalOptions>
                        <additionalOption>-Xdoclint:none</additionalOption>
                    </additionalOptions>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <!-- 项目发布管理 -->
    <distributionManagement>
    
        <!-- 私服地址 ，基线仓库 -->
        <repository>
            <id>Releases</id>
            <url>http://127.0.0.1:8081/nexus/content/repositories/releases</url>
        </repository>
        
        <!-- 私服地址 ，快照仓库 -->
        <snapshotRepository>
            <id>Snapshots</id>
            <url>http://127.0.0.1:8081/nexus/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>
</project>
